name: Docker containers running on CIRRUS CPUs

on:
  push:
    branches:
      - stormspeed
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-run-on-CIRRUS:
    name: GNU container on CPUs
    runs-on: gha-runner-stormspeed # CIRRUS CPU runner
    container:
      image: hub.k8s.ucar.edu/stormspeed/opensuse15:gcc12_cpu
      credentials:
        username: ${{ secrets.hub_user }}
        password: ${{ secrets.hub_password }}
    strategy:
      fail-fast: false
    env:
      TMP_DIR: tmp
    steps:
      - name: Checkout code from a pull request or push
        uses: actions/checkout@v4

      - name: Set up some git configurations; it can be any user name and email address
        run: |
          git config --global user.email "example_user@example.com"
          git config --global user.name "example_user"

      - name: Checkout individual components
        run: | # Use -C option to specify the workspace directory; otherwise root_dir is set to '.' and the checkout will fail
          . /opt/spack/share/spack/setup-env.sh && \
          spack load python && \
          ./bin/git-fleximod -C ${GITHUB_WORKSPACE} update

      - name: Build and run FADIAB at ne30 resolution
        run: |
          . /opt/spack/share/spack/setup-env.sh
          spack load python libxml2 cmake openmpi parallel-netcdf parallelio esmf
          export MPI_ROOT=$(spack location -i openmpi@5.0.8)
          export NETCDF_C_PATH=$(spack location -i netcdf-c@4.9.2)
          export NETCDF_FORTRAN_PATH=$(spack location -i netcdf-fortran@4.6.1)
          export PNETCDF=$(spack location -i parallel-netcdf@1.14.0)
          export PIO=$(spack location -i parallelio@2.6.6)
          export ESMFMKFILE=$(spack location -i esmf@8.8.1)/lib/esmf.mk
          export LAPACK=$(spack location -i netlib-lapack@3.12.1)
          export PIO_VERSION_MAJOR=2
          export PIO_TYPENAME_VALID_VALUES="netcdf, pnetcdf, netcdf4c, netcdf4p"
          export USER=robot
          cd cime/scripts
          ./create_newcase --case /$TMP_DIR/ci_test --machine cirrus --compset FADIAB --res ne30_ne30_mg17 --compiler gnu --run-unsupported
          cd /$TMP_DIR/ci_test
          ./xmlchange NTASKS=32
          ./xmlchange CAM_TARGET=theta-l
          ./xmlchange STOP_OPTION=ndays,STOP_N=1,RESUBMIT=0
          ./xmlchange DOUT_S='FALSE'
          ./case.setup
          ./case.build
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PIO/lib:$NETCDF_FORTRAN_PATH/lib:$NETCDF_C_PATH/lib:$LAPACK/lib64:$PNETCDF/lib
          TMP_OUTPUT="case_output.log"
          ./case.submit --no-batch 2>&1 | tee "$TMP_OUTPUT"
          # Check the last 5 lines for 'failed' or 'error:' (case-insensitive)
          if tail -n 5 "$TMP_OUTPUT" | grep -iE 'failed|error:'; then
            exit 911
          fi
